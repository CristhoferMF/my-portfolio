{"version":3,"sources":["theme.js","components/GlobalStyles.js","hooks/useDarkMode.js","App.js","index.js"],"names":["THEME","color","primary","accent","PurpleMagenta","cyanBlue","font","default","size","base","h3","SCREENS","lightTheme","body","text","term","input","isLight","darkTheme","GlobalStyles","createGlobalStyle","theme","useDarkMode","useState","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","HomePage","lazy","ProjectPage","App","themeToggler","fallback","style","textAlign","marginTop","path","onThemeToggler","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHAAA,sGAAO,IAAMA,EAAQ,CACjBC,MAAO,CACHC,QAAS,UACTC,OAAQ,UACRC,cAAe,UACfC,SAAU,WAEdC,KAAM,CACFC,QAAS,WACTC,KAAM,CACFC,KAAM,OACNC,GAAI,SAGZC,QAAS,CACL,GAAM,QACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,WAIFC,EAAa,CACtBC,KAAK,OACLC,KAAK,OACLC,KAAMf,EAAMC,MAAMI,SAClBW,MAAO,UACPC,SAAS,GAGAC,EAAY,CACrBL,KAAK,UACLC,KAAK,OACLC,KAAM,UACNC,MAAOhB,EAAMC,MAAMG,cACnBa,SAAQ,I,kJCpCCE,EAAeC,YAAH,6iBAaL,qBAAGC,MAAkBR,QAC1B,qBAAGQ,MAAkBP,Q,QCMrBQ,MApBf,WAEI,MAA0BC,mBAAS,SAAnC,mBAAOF,EAAP,KAAcG,EAAd,KAEMC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAAQH,GACpCF,EAASE,IAWb,OAJAI,qBAAU,WACN,IAAMC,EAAaJ,OAAOC,aAAaI,QAAQ,SAC/CD,GAAcP,EAASO,KACzB,IACK,CAACV,EARa,WACCI,EAAV,UAARJ,EAA0B,OAAkB,Y,OCL9CY,EAAWC,gBAAK,kBAAM,uDACtBC,EAAcD,gBAAK,kBAAM,uDA0BhBE,MAxBf,WAEE,MAA6Bd,IAA7B,mBAAOD,EAAP,KAAagB,EAAb,KAEA,OACE,eAAC,IAAD,CAAehB,MAAiB,UAAVA,EAAoBT,IAAaM,IAAWmB,aAAcA,EAAhF,UACE,cAAClB,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUmB,SAAU,qBAAKC,MAAO,CAACC,UAAU,SAASC,UAAU,IAA1C,wBAApB,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAACP,EAAD,MAEF,eAAC,IAAD,CAAOO,KAAK,IAAZ,UACE,cAACT,EAAD,CAAUU,eAAgBN,IAC1B,wBAAQO,QAASP,EAAjB,wCCpBZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c99fbaab.chunk.js","sourcesContent":["export const THEME = {\r\n    color: {\r\n        primary: '#33C176',\r\n        accent: '#9B31F7',\r\n        PurpleMagenta: '#2E2532',\r\n        cyanBlue: '#C2D3EB',\r\n    },\r\n    font: {\r\n        default: 'FuturaPT',\r\n        size: {\r\n            base: '18px',\r\n            h3: '48px'\r\n        }\r\n    },\r\n    SCREENS: {\r\n        'sm': '640px',\r\n        'md': '768px',\r\n        'lg': '1024px',\r\n        'xl': '1280px',\r\n        '2xl': '1536px',\r\n        '3xl': '1600px',\r\n        '4xl': '1900px',\r\n    }\r\n}\r\n\r\nexport const lightTheme = {\r\n    body:'#fff',\r\n    text:'#000',\r\n    term: THEME.color.cyanBlue,\r\n    input: '#F0F4F9',\r\n    isLight: true\r\n}\r\n\r\nexport const darkTheme = {\r\n    body:'#201A23',\r\n    text:'#fff',\r\n    term: '#2E2532',\r\n    input: THEME.color.PurpleMagenta,\r\n    isLight:false,\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *{\r\n    font-family: \"FuturaPT\";\r\n    letter-spacing: 0.05em;\r\n  }\r\n\r\n  body {\r\n      margin: 0;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n          'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n          sans-serif;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      background: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`","import { useEffect, useState } from 'react'\r\n\r\nfunction useDarkMode() {\r\n    \r\n    const [theme, setTheme] = useState('light')\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme',mode);\r\n        setTheme(mode)\r\n    }\r\n\r\n    const themeToogler = () => {\r\n        theme==='light' ? setMode('dark') : setMode('light')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme && setTheme(localTheme)   \r\n    },[])\r\n    return [theme,themeToogler]\r\n}\r\n\r\nexport default useDarkMode\r\n","import {lazy,Suspense } from 'react'\r\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom'\r\nimport { GlobalStyles } from './components/GlobalStyles';\r\nimport { lightTheme,darkTheme } from './theme';\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport useDarkMode from './hooks/useDarkMode'\r\n\r\nconst HomePage = lazy(() => import('./pages/Home'));\r\nconst ProjectPage = lazy(() => import('./pages/Project'));\r\n\r\nfunction App() {\r\n\r\n  const [theme,themeToggler] = useDarkMode();\r\n  \r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme} themeToggler={themeToggler}>\r\n      <GlobalStyles/>\r\n      <Router>\r\n        <Suspense fallback={<div style={{textAlign:'center',marginTop:96}}>Loading...</div>}>\r\n        <Switch>\r\n          <Route path=\"/projects/:name\" >\r\n            <ProjectPage/>\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <HomePage onThemeToggler={themeToggler}/>\r\n            <button onClick={themeToggler}>Switch Color</button>\r\n          </Route>\r\n        </Switch>\r\n        </Suspense>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}