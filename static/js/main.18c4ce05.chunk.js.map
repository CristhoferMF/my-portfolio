{"version":3,"sources":["theme.js","components/GlobalStyles.js","hooks/useDarkMode.js","App.js","index.js"],"names":["THEME","color","primary","accent","PurpleMagenta","cyanBlue","font","default","size","base","h3","SCREENS","lightTheme","body","text","term","input","isLight","darkTheme","GlobalStyles","createGlobalStyle","theme","useDarkMode","useState","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","HomePage","lazy","ProjectPage","App","themeToggler","fallback","style","textAlign","marginTop","path","onThemeToggler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHAAA,sGAAO,IAAMA,EAAQ,CACjBC,MAAO,CACHC,QAAS,UACTC,OAAQ,UACRC,cAAe,UACfC,SAAU,WAEdC,KAAM,CACFC,QAAS,WACTC,KAAM,CACFC,KAAM,OACNC,GAAI,SAGZC,QAAS,CACL,GAAM,QACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,MAAO,SACP,MAAO,SACP,MAAO,WAIFC,EAAa,CACtBC,KAAK,OACLC,KAAK,OACLC,KAAMf,EAAMC,MAAMI,SAClBW,MAAO,UACPC,SAAS,GAGAC,EAAY,CACrBL,KAAK,UACLC,KAAK,OACLC,KAAM,UACNC,MAAOhB,EAAMC,MAAMG,cACnBa,SAAQ,I,kJCpCCE,EAAeC,YAAH,6iBAaL,qBAAGC,MAAkBR,QAC1B,qBAAGQ,MAAkBP,Q,QCMrBQ,MApBf,WAEI,MAA0BC,mBAAS,SAAnC,mBAAOF,EAAP,KAAcG,EAAd,KAEMC,EAAU,SAAAC,GACZC,OAAOC,aAAaC,QAAQ,QAAQH,GACpCF,EAASE,IAWb,OAJAI,qBAAU,WACN,IAAMC,EAAaJ,OAAOC,aAAaI,QAAQ,SAC/CD,GAAcP,EAASO,KACzB,IACK,CAACV,EARa,WACCI,EAAV,UAARJ,EAA0B,OAAkB,Y,OCL9CY,EAAWC,gBAAK,kBAAM,uDACtBC,EAAcD,gBAAK,kBAAM,uDAyBhBE,MAvBf,WAEE,MAA6Bd,IAA7B,mBAAOD,EAAP,KAAagB,EAAb,KAEA,OACE,eAAC,IAAD,CAAehB,MAAiB,UAAVA,EAAoBT,IAAaM,IAAWmB,aAAcA,EAAhF,UACE,cAAClB,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUmB,SAAU,qBAAKC,MAAO,CAACC,UAAU,SAASC,UAAU,IAA1C,wBAApB,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAACT,EAAD,CAAUU,eAAgBN,iBCnBtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.18c4ce05.chunk.js","sourcesContent":["export const THEME = {\n    color: {\n        primary: '#33C176',\n        accent: '#9B31F7',\n        PurpleMagenta: '#2E2532',\n        cyanBlue: '#C2D3EB',\n    },\n    font: {\n        default: 'FuturaPT',\n        size: {\n            base: '18px',\n            h3: '48px'\n        }\n    },\n    SCREENS: {\n        'sm': '640px',\n        'md': '768px',\n        'lg': '1024px',\n        'xl': '1280px',\n        '2xl': '1536px',\n        '3xl': '1600px',\n        '4xl': '1900px',\n    }\n}\n\nexport const lightTheme = {\n    body:'#fff',\n    text:'#000',\n    term: THEME.color.cyanBlue,\n    input: '#F0F4F9',\n    isLight: true\n}\n\nexport const darkTheme = {\n    body:'#201A23',\n    text:'#fff',\n    term: '#2E2532',\n    input: THEME.color.PurpleMagenta,\n    isLight:false,\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  *{\n    font-family: \"FuturaPT\";\n    letter-spacing: 0.05em;\n  }\n\n  body {\n      margin: 0;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n          'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n          sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      background: ${({ theme }) => theme.body};\n      color: ${({ theme }) => theme.text};\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\n`","import { useEffect, useState } from 'react'\n\nfunction useDarkMode() {\n    \n    const [theme, setTheme] = useState('light')\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme',mode);\n        setTheme(mode)\n    }\n\n    const themeToogler = () => {\n        theme==='light' ? setMode('dark') : setMode('light')\n    }\n\n    useEffect(()=>{\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)   \n    },[])\n    return [theme,themeToogler]\n}\n\nexport default useDarkMode\n","import {lazy,Suspense } from 'react'\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom'\nimport { GlobalStyles } from './components/GlobalStyles';\nimport { lightTheme,darkTheme } from './theme';\nimport {ThemeProvider} from \"styled-components\";\nimport useDarkMode from './hooks/useDarkMode'\n\nconst HomePage = lazy(() => import('./pages/Home'));\nconst ProjectPage = lazy(() => import('./pages/Project'));\n\nfunction App() {\n\n  const [theme,themeToggler] = useDarkMode();\n  \n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme} themeToggler={themeToggler}>\n      <GlobalStyles/>\n      <Router>\n        <Suspense fallback={<div style={{textAlign:'center',marginTop:96}}>Loading...</div>}>\n        <Switch>\n          <Route path=\"/projects/:name\" >\n            <ProjectPage/>\n          </Route>\n          <Route path=\"*\">\n            <HomePage onThemeToggler={themeToggler}/>\n          </Route>\n        </Switch>\n        </Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}